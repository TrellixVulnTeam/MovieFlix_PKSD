{"ast":null,"code":"var _process$env$REACT_AP, _process$env$REACT_AP2, _process$env$REACT_AP3;\n\nimport qs from \"qs\";\nimport axios from \"axios\";\nimport history from \"./history\";\nimport jwtDecode from \"jwt-decode\";\nexport const BASE_URL = (_process$env$REACT_AP = process.env.REACT_APP_BACKEND_URL) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"http://localhost:8080\";\nconst CLIENT_ID = (_process$env$REACT_AP2 = process.env.REACT_APP_CLIENT_ID) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : \"myclientid\";\nconst CLIENT_SECRET = (_process$env$REACT_AP3 = process.env.REACT_APP_CLIENT_SECRET) !== null && _process$env$REACT_AP3 !== void 0 ? _process$env$REACT_AP3 : \"myclientsecret\"; //request de login\n\nexport const requestBackendLogin = loginData => {\n  //montando o headers que é passado no AxiosRequestConfig quando faz login\n  const headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization: \"Basic \" + window.btoa(CLIENT_ID + \":\" + CLIENT_SECRET)\n  }; //corpo da requisição (convertidos em form-urlencoded usando o qs)\n\n  const data = qs.stringify({ ...loginData,\n    grant_type: \"password\"\n  }); //retorna método POST para fazer a requisição de login\n\n  return axios({\n    method: \"POST\",\n    baseURL: BASE_URL,\n    url: \"oauth/token\",\n    data,\n    headers\n  });\n};\nexport const requestBackend = config => {\n  const headers = config.withCredentials ? { ...config.headers,\n    Authorization: \"Bearer \" + getAuthDataFromLocalStorage().access_token\n  } : config.headers;\n  return axios({ ...config,\n    baseURL: BASE_URL,\n    headers\n  });\n}; //decodificar token com JWT\n\nexport const getTokenData = () => {\n  try {\n    const loginResponse = getAuthDataFromLocalStorage();\n    return jwtDecode(loginResponse.access_token);\n  } catch (error) {\n    return undefined;\n  }\n};\nexport const isAuthenticated = () => {\n  const tokenData = getTokenData();\n  return tokenData && tokenData.exp * 1000 > Date.now() ? true : false;\n};\nexport const hasAnyRoles = roles => {\n  if (roles.length === 0) {\n    return true;\n  }\n\n  const tokenData = getTokenData();\n\n  if (tokenData !== undefined) {\n    for (var i = 0; i < roles.length; i++) {\n      if (tokenData.authorities.includes(roles[i])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}; //Local Storage\n\nconst tokenKey = \"authData\";\nexport const saveAuthDataToLocalStorage = obj => {\n  localStorage.setItem(tokenKey, JSON.stringify(obj));\n};\nexport const getAuthDataFromLocalStorage = () => {\n  var _localStorage$getItem;\n\n  const str = (_localStorage$getItem = localStorage.getItem(tokenKey)) !== null && _localStorage$getItem !== void 0 ? _localStorage$getItem : \"{}\";\n  return JSON.parse(str);\n};\nexport const removeAuthDataFromLocalStorage = () => {\n  localStorage.removeItem(tokenKey);\n}; // Response interceptor\n\naxios.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  //401-unauthorized ou 403-Forbidden\n  if (error.response.status === 401 || error.response.status === 403) {\n    history.push(\"/\");\n  }\n\n  return Promise.reject(error);\n});","map":{"version":3,"names":["qs","axios","history","jwtDecode","BASE_URL","process","env","REACT_APP_BACKEND_URL","CLIENT_ID","REACT_APP_CLIENT_ID","CLIENT_SECRET","REACT_APP_CLIENT_SECRET","requestBackendLogin","loginData","headers","Authorization","window","btoa","data","stringify","grant_type","method","baseURL","url","requestBackend","config","withCredentials","getAuthDataFromLocalStorage","access_token","getTokenData","loginResponse","error","undefined","isAuthenticated","tokenData","exp","Date","now","hasAnyRoles","roles","length","i","authorities","includes","tokenKey","saveAuthDataToLocalStorage","obj","localStorage","setItem","JSON","str","getItem","parse","removeAuthDataFromLocalStorage","removeItem","interceptors","response","use","status","push","Promise","reject"],"sources":["/home/marina/Desktop/MovieFlix/src/util/requests.ts"],"sourcesContent":["import qs from \"qs\";\nimport axios, { AxiosRequestConfig } from \"axios\";\nimport history from \"./history\";\nimport jwtDecode from \"jwt-decode\";\nimport { Review } from \"../types/review\";\n\nexport const BASE_URL =\n  process.env.REACT_APP_BACKEND_URL ?? \"http://localhost:8080\";\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID ?? \"myclientid\";\nconst CLIENT_SECRET = process.env.REACT_APP_CLIENT_SECRET ?? \"myclientsecret\";\n\n//request de login\ntype LoginData = {\n  username: string;\n  password: string;\n};\n\nexport const requestBackendLogin = (loginData: LoginData) => {\n  //montando o headers que é passado no AxiosRequestConfig quando faz login\n  const headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    Authorization: \"Basic \" + window.btoa(CLIENT_ID + \":\" + CLIENT_SECRET),\n  };\n\n  //corpo da requisição (convertidos em form-urlencoded usando o qs)\n  const data = qs.stringify({\n    ...loginData,\n    grant_type: \"password\",\n  });\n\n  //retorna método POST para fazer a requisição de login\n  return axios({\n    method: \"POST\",\n    baseURL: BASE_URL,\n    url: \"oauth/token\",\n    data,\n    headers,\n  });\n};\n\nexport const requestBackend = (config: AxiosRequestConfig) => {\n  const headers = config.withCredentials\n    ? {\n        ...config.headers,\n        Authorization: \"Bearer \" + getAuthDataFromLocalStorage().access_token,\n      }\n    : config.headers;\n  return axios({ ...config, baseURL: BASE_URL, headers });\n};\n\n//decodificar token com JWT\nexport type Role = \"ROLE_VISITOR\" | \"ROLE_MEMBER\";\n\nexport type TokenData = {\n  exp: number;\n  user_name: string;\n  authorities: Role[];\n};\n\nexport const getTokenData = (): TokenData | undefined => {\n  try {\n    const loginResponse = getAuthDataFromLocalStorage();\n    return jwtDecode(loginResponse.access_token) as TokenData;\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const isAuthenticated = (): boolean => {\n  const tokenData = getTokenData();\n  return tokenData && tokenData.exp * 1000 > Date.now() ? true : false;\n};\n\nexport const hasAnyRoles = (roles: Role[]): boolean => {\n  if (roles.length === 0) {\n    return true;\n  }\n  const tokenData = getTokenData();\n\n  if (tokenData !== undefined) {\n    for (var i = 0; i < roles.length; i++) {\n      if (tokenData.authorities.includes(roles[i])) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n//Local Storage\nconst tokenKey = \"authData\";\n\ntype LoginResponse = {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  scope: string;\n  userFirstName: string;\n  userId: number;\n};\n\nexport const saveAuthDataToLocalStorage = (obj: LoginResponse) => {\n  localStorage.setItem(tokenKey, JSON.stringify(obj));\n};\n\nexport const getAuthDataFromLocalStorage = () => {\n  const str = localStorage.getItem(tokenKey) ?? \"{}\";\n  return JSON.parse(str) as LoginResponse;\n};\n\nexport const removeAuthDataFromLocalStorage = () => {\n  localStorage.removeItem(tokenKey);\n};\n\n// Response interceptor\naxios.interceptors.response.use(\n  function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  },\n  function (error) {\n    //401-unauthorized ou 403-Forbidden\n    if (error.response.status === 401 || error.response.status === 403) {\n      history.push(\"/\");\n    }\n    return Promise.reject(error);\n  }\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}